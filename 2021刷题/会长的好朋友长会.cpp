/*
问题 B: 会长的好朋友长会
描述
最近，会长的好友长会（姓长名会）邀请他去他们学校玩，顺便炫耀他校区里新开的饭堂。新饭堂
菜品确实十分丰富，而且结账方式也十分高级:盛装饭菜的碗碟都内置了芯片，因此结账
的时候只要把托盘放在结账处，就能自动计算出饭菜的价格，只需刷卡走人就行。
可是，就是在结账这一步，长会翻车了:当它把两人的饭菜一起放好， 刷卡时却响
起了一句提示音一余额不足， 请充值"。
“诶?你这9块的红烧肉，再加7块的炒饭，16块呀， 可是你卡里只有 15块呢。
“不是这个问题，实际结算 的时候，学生卡是可以打七折的，因此我只需要付11.2”。
“啊?那你卡里的钱应该够啊?为什么还会提示余额不足.会长更疑惑了。
“因为这个系统他有个问题，如果你卡里的余额比当前需要结算的菜品的原价之和低的
话，哪怕实际上你打完七折之后是够的,也会提示余额不足....说着说着，长会打开
了校园卡充值界面。
“等等!“会长突然打断了他，“何必呢?你这样子不就好了"，他端过长会的托盘,
在结账台上进行了一番操作，果然不需要充值就解决了这个问题。
我们保证，会长并没有入侵结账系统，结账的最小单位为菜品。你能猜到会长用
了什么方法解决这个问题吗?为了证明你确实猜对了，我们会用一些数据来考考你。

格式
输入格式
本题输入含多组数据。第一行有一个数字T (1≤T≤100)，表示数据总数。
对于每组数据，第一行有两个正整数n,m (1 ≤n,m≤100)表示长会拿的饭菜数
量，以及它现在饭卡的余额。
接下来一行共有i个以空格分隔的整数w1，w2,...,Wn (1≤Wi≤100)，表示这组数据
里每一道菜的原价。

输出格式
输出T行。对于每一组数据，如果按照会长的方法最终能够支付成功，则在这一行
输出字符串"yes"，否则输出字符串"no”(均不含引号)。

样例
样例输入 Copy
2
2 15
7 9
1 8
9
样例输出 Copy
yes
no		
提示
会长并没有入侵饭堂的结账系统，它采用的是正常人在正常操作范围内能实现的方
法。结账的最小单位为单个菜品(即对于一道7元的菜，你不能拆分为“先付3元的部分,
再付4元的部分"。
*/
#include <iostream>
using namespace std;
void sort(double *a, int n)
{
    for (int i = 1; i < n; i++)
    {
        int j = i - 1;
        double t = a[i] - 1;
        while (j >= 0 && a[j + 1] > t)
            a[j-- + 1] = a[j];
        a[j + 1] = t;
    }
}
int main(void)
{
    int t;
    cin >> t;
    while (t--)
    {
        double m;
        int n;
        cin >> n >> m;
        auto price = new double[n];
        for (int i = 0; i < n; i++)
        {
            cin >> price[i];
            // cout << price[i];
        }
        // cout << endl;
        sort(price, n);
        for (int i = 0; i < n; i++)
        {
            m -= price[i];
            if (m < 0)
                break;
            m += price[i] * 0.3;
        }
        if (m >= 0)
            cout << "yes" << endl;
        else
            cout << "no" << endl;
        delete[] price;
    }
}