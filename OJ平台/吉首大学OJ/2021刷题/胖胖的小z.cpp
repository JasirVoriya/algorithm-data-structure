/*
问题 M: 胖胖的小Z
描述
实验室的小Z特别爱吃糖，但又不爱运动，以至于小Z越来越胖了。最近实验室买了n颗糖果，每颗糖果都有一个美味度a[i]，小Z每天最多可以吃m颗糖果。为了让小Z多去运动运动，实验室特意立下了一个规则:小Z开始吃糖果的那天算第1天，如果小Z在第d天吃了第i颗糖果，那小Z下次就要绕操场多跑x圈，而x=a[i]*d;现在小Z正在犹豫吃多少颗糖果，
现在小Z想知道，如果他只想吃w(1<=w<=n)颗糖果，那下次小Z最小要绕操场跑多少圈。小Z可以按随意顺序吃糖果。

格式
输入格式
第一行输入n和m（1≤m≤n≤200 000）分别指实验室买的糖果数和小Z每天最多可以吃的糖果数。
第二行输入n个数,a[1],a[2].........a[n](1<=a[i]<=200000)。分别指每颗糖果的美味度。保证a数组是升序的。

输出格式
输出n个整数，分别表示小Z如果只吃w(1<=w<=n)颗糖果，下次小Z最小要绕操场跑的圈数。（最后一个数后没有空格）

样例
样例输入 Copy
9 2    
2 3 4 4 6 6 7 8 19
样例输出 Copy
2 5 11 18 30 43 62 83 121		
提示
对于样例，如果小Z只吃1颗，那第一天吃第1颗糖果，所以是2*1=2；
如果吃2颗，那第一天吃第1颗和第2颗，2*1+3*1=5；
如果吃3颗，那第一天吃第2颗和第3颗，第二天吃第1颗，3*1+4*1+2*2=11；
如果吃4颗，那第一天吃第3颗和第4颗，第二天吃第1颗和第2颗，4*1+4*1+2*2+3*2=18；
...............
..............
..............
..............
一直到吃n颗
*/
#include <iostream>
using namespace std;
int main(void)
{
    std::ios::sync_with_stdio(false);
    int n, m;
    cin >> n >> m;
    auto arry = new long long[n + 1];
    auto ans = new long long[n + 1];
    auto sum = new long long[n + 1];
    sum[0] = 0;
    for (int i = 1; i <= n; i++)
    {
        cin >> arry[i];
        sum[i] = sum[i - 1] + arry[i];
        // cout << sum[i] << endl;
        ans[i] = 0;
        for (int j = i, day = 1; j>0; j -= m, day++)
        {
            int x = j - m > 0 ? j - m : 0;
            // cout << sum[x] << endl;
            ans[i] += (sum[j] - sum[x]) * day;
        }
        cout << ans[i] << " ";
    }
    delete[] arry;
    delete[] sum;
    delete[] ans;
}